const vscode = require('vscode');

// –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è —Ç–∞–π–º–µ—Ä–∞
let timerInterval;
let totalSeconds = 0;
let isPaused = false;
let statusBarItem;
let bookmarks = [];

function activate(context) {
  console.log('‚úÖ –£–º–Ω—ã–π —Ç–∞–π–º–µ—Ä –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω!');

  // –°–æ–∑–¥–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç –≤ —Å—Ç—Ä–æ–∫–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è
  statusBarItem =
      vscode.window.createStatusBarItem(vscode.StatusBarAlignment.Left, 100);
  updateDisplay();
  statusBarItem.show();

  // –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–∞–π–º–µ—Ä
  startTimer();

  // –ö–æ–º–∞–Ω–¥–∞ 1: –ü–æ–∫–∞–∑–∞—Ç—å —Ç–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è
  let showTimeCommand =
      vscode.commands.registerCommand('smart-timer.showTime', function() {
        vscode.window.showInformationMessage(
            `‚è±Ô∏è –¢–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è: ${formatTime(totalSeconds)}`);
      });

  // –ö–æ–º–∞–Ω–¥–∞ 2: –ü–∞—É–∑–∞/–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å
  let pauseCommand =
      vscode.commands.registerCommand('smart-timer.pause', function() {
        if (isPaused) {
          // –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º
          isPaused = false;
          startTimer();
          vscode.window.showInformationMessage('‚ñ∂Ô∏è –¢–∞–π–º–µ—Ä –ø—Ä–æ–¥–æ–ª–∂–µ–Ω');
        } else {
          // –°—Ç–∞–≤–∏–º –Ω–∞ –ø–∞—É–∑—É
          isPaused = true;
          stopTimer();
          vscode.window.showInformationMessage('‚è∏Ô∏è –¢–∞–π–º–µ—Ä –Ω–∞ –ø–∞—É–∑–µ');
        }
        updateDisplay();
      });

  // –ö–æ–º–∞–Ω–¥–∞ 3: –°–±—Ä–æ—Å–∏—Ç—å —Ç–∞–π–º–µ—Ä
  let resetCommand =
      vscode.commands.registerCommand('smart-timer.reset', function() {
        totalSeconds = 0;
        bookmarks = [];
        isPaused = false;
        startTimer();
        vscode.window.showInformationMessage('üîÑ –¢–∞–π–º–µ—Ä —Å–±—Ä–æ—à–µ–Ω');
        updateDisplay();
      });

  // –ö–æ–º–∞–Ω–¥–∞ 4: –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
  let statsCommand =
      vscode.commands.registerCommand('smart-timer.showStats', function() {
        const statsMessage = `üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:
‚è±Ô∏è –û–±—â–µ–µ –≤—Ä–µ–º—è: ${formatTime(totalSeconds)}
üìå –ú–µ—Ç–æ–∫: ${bookmarks.length}
${isPaused ? '‚è∏Ô∏è –°–µ–π—á–∞—Å –Ω–∞ –ø–∞—É–∑–µ' : '‚ñ∂Ô∏è –°–µ–π—á–∞—Å —Ä–∞–±–æ—Ç–∞–µ—Ç'}`;

        vscode.window.showInformationMessage(statsMessage);
      });

  // –ö–æ–º–∞–Ω–¥–∞ 5: –î–æ–±–∞–≤–∏—Ç—å –≤—Ä–µ–º–µ–Ω–Ω—É—é –º–µ—Ç–∫—É
  let bookmarkCommand =
      vscode.commands.registerCommand('smart-timer.addBookmark', function() {
        const timestamp = formatTime(totalSeconds);
        bookmarks.push({
          time: timestamp,
          text: `–ú–µ—Ç–∫–∞ ${bookmarks.length + 1}`,
          totalSeconds: totalSeconds
        });

        vscode.window.showInformationMessage(
            `üìå –î–æ–±–∞–≤–ª–µ–Ω–∞ –º–µ—Ç–∫–∞: ${timestamp}`);
      });

  // –ö–æ–º–∞–Ω–¥–∞ 6: –ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –≤—Ä–µ–º–µ–Ω–Ω—ã–µ –º–µ—Ç–∫–∏
  let showBookmarksCommand =
      vscode.commands.registerCommand('smart-timer.showBookmarks', function() {
        if (bookmarks.length === 0) {
          vscode.window.showInformationMessage(
              'üì≠ –ù–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –º–µ—Ç–æ–∫');
          return;
        }

        // –°–æ–∑–¥–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–æ –≤—Å–µ–º–∏ –º–µ—Ç–∫–∞–º–∏
        let bookmarksMessage = 'üìã –í—Ä–µ–º–µ–Ω–Ω—ã–µ –º–µ—Ç–∫–∏:\n\n';
        bookmarks.forEach((bookmark, index) => {
          bookmarksMessage +=
              `${index + 1}. ${bookmark.time} - ${bookmark.text}\n`;
        });

        bookmarksMessage += `\n–í—Å–µ–≥–æ –º–µ—Ç–æ–∫: ${bookmarks.length}`;

        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏
        vscode.window.showInformationMessage(bookmarksMessage);
      });

  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –∞–∫—Ç–∏–≤–∞—Ü–∏–∏
  vscode.window.showInformationMessage(
      '–£–º–Ω—ã–π —Ç–∞–π–º–µ—Ä –∑–∞–ø—É—â–µ–Ω! –ö–æ–º–∞–Ω–¥—ã: Ctrl+Shift+P ‚Üí Smart Timer');

  // –î–æ–±–∞–≤–ª—è–µ–º –≤—Å—ë –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç
  context.subscriptions.push(statusBarItem);
  context.subscriptions.push(showTimeCommand);
  context.subscriptions.push(pauseCommand);
  context.subscriptions.push(resetCommand);
  context.subscriptions.push(statsCommand);
  context.subscriptions.push(bookmarkCommand);
  context.subscriptions.push(showBookmarksCommand);
}

function startTimer() {
  stopTimer();  // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–π —Ç–∞–π–º–µ—Ä
  if (!isPaused) {
    timerInterval = setInterval(() => {
      totalSeconds++;
      updateDisplay();
    }, 1000);
  }
}

function stopTimer() {
  if (timerInterval) {
    clearInterval(timerInterval);
  }
}

function updateDisplay() {
  let displayText = `‚è±Ô∏è ${formatTime(totalSeconds)}`;

  if (isPaused) {
    displayText = `‚è∏Ô∏è ${formatTime(totalSeconds)}`;
    statusBarItem.color =
        new vscode.ThemeColor('errorForeground');  // –ö—Ä–∞—Å–Ω—ã–π —Ü–≤–µ—Ç –ø—Ä–∏ –ø–∞—É–∑–µ
  } else {
    statusBarItem.color = undefined;  // –û–±—ã—á–Ω—ã–π —Ü–≤–µ—Ç
  }

  statusBarItem.text = displayText;
  statusBarItem.tooltip = `–£–º–Ω—ã–π —Ç–∞–π–º–µ—Ä\n–í—Ä–µ–º—è: ${
      formatTime(totalSeconds)}\n–ú–µ—Ç–æ–∫: ${bookmarks.length}\n${
      isPaused ?
          '‚è∏Ô∏è –ù–∞ –ø–∞—É–∑–µ' :
          '‚ñ∂Ô∏è –†–∞–±–æ—Ç–∞–µ—Ç'}\n\n–ö–æ–º–∞–Ω–¥—ã:\n‚Ä¢ –ü–∞—É–∑–∞: Ctrl+Alt+P\n‚Ä¢ –î–æ–±–∞–≤–∏—Ç—å –º–µ—Ç–∫—É\n‚Ä¢ –ü–æ–∫–∞–∑–∞—Ç—å –º–µ—Ç–∫–∏\n‚Ä¢ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞`;
}

function formatTime(totalSeconds) {
  const hours = Math.floor(totalSeconds / 3600);
  const minutes = Math.floor((totalSeconds % 3600) / 60);
  const seconds = totalSeconds % 60;

  if (hours > 0) {
    return `${hours}—á ${minutes.toString().padStart(2, '0')}–º ${
        seconds.toString().padStart(2, '0')}—Å`;
  } else if (minutes > 0) {
    return `${minutes}–º ${seconds.toString().padStart(2, '0')}—Å`;
  } else {
    return `${seconds}—Å`;
  }
}

function deactivate() {
  stopTimer();
  console.log('–¢–∞–π–º–µ—Ä –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω');
}

module.exports = {
  activate,
  deactivate
};